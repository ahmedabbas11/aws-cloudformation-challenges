Description: >
  create private ec2 server and acess through access manager

Parameters:
 EnvironmentName:
     Description: An environment name that will be prefixed to resource names
     Type: String

Resources:

# IAM Role to allow EC2 Session Manager to access our server
  RoleForSSMAccess: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  instantaceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub ${EnvironmentName}-profile
      Path: "/"
      Roles:
        - !Ref RoleForSSMAccess

  myWebAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to our test host
        VpcId:
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  myWebServerInstance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      IamInstanceProfile: !Ref instantaceProfile
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-PRI-SN"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          echo "Udacity Demo Web Server Up and Running!" > index.html
      # image is changed based on region , this one is for us-east-1 !!
      ImageId: ami-00ddb0e5626798373
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-machine
  